---
export interface Props {
  latitude: number
  longitude: number
  zoom: number
  /** the DOM ID of a <div> element */
  container: string
  /** https://leafletjs.com/reference.html#tilelayer */
  tileLayer: string
  /** Most tile servers require attribution. */
  attribution: string
  containerstyle?: string
}

const { latitude, longitude, zoom, container, tileLayer="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", attribution, containerstyle = "height: 61.8vh", geojson={} } = Astro.props
---
<leaflet-map
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-container={container}
  data-tiles={tileLayer}
  data-attribution={attribution}
  data-containerstyle={containerstyle}
  data-geojson={geojson}
>
<div id={container} style={containerstyle}></div>
<script>
  import "leaflet/dist/leaflet"
  import "leaflet/dist/leaflet.css"
  
  class LeafletMap extends HTMLElement {
    constructor() {
      super()

      const latlng = [Number(this.dataset.latitude), Number(this.dataset.longitude)]

      var map = L.map(this.dataset.container).setView(latlng, Number(this.dataset.zoom));
      L.tileLayer(
        this.dataset.tiles,
        {attribution: this.dataset.attribution}
        ).addTo(map);

      L.geoJson(JSON.parse(this.dataset.geojson), {
        style: {
          "color": "#F16636",
          "weight": 2,
          "opacity": 1
        }
      }).addTo(map);
      
    }
  }

  window.customElements.define("leaflet-map", LeafletMap);
</script>
